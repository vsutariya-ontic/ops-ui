/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

#root :is(.fixed) {
  position: fixed;
}

#root :is(.absolute) {
  position: absolute;
}

#root :is(.relative) {
  position: relative;
}

#root :is(.sticky) {
  position: sticky;
}

#root :is(.bottom-28) {
  bottom: 7rem;
}

#root :is(.bottom-8) {
  bottom: 2rem;
}

#root :is(.left-0) {
  left: 0px;
}

#root :is(.left-12) {
  left: 3rem;
}

#root :is(.left-\[40px\]) {
  left: 40px;
}

#root :is(.right-0) {
  right: 0px;
}

#root :is(.right-12) {
  right: 3rem;
}

#root :is(.right-8) {
  right: 2rem;
}

#root :is(.top-0) {
  top: 0px;
}

#root :is(.top-12) {
  top: 3rem;
}

#root :is(.top-48) {
  top: 12rem;
}

#root :is(.top-\[40px\]) {
  top: 40px;
}

#root :is(.z-10) {
  z-index: 10;
}

#root :is(.z-20) {
  z-index: 20;
}

#root :is(.z-30) {
  z-index: 30;
}

#root :is(.z-40) {
  z-index: 40;
}

#root :is(.z-50) {
  z-index: 50;
}

#root :is(.mb-2) {
  margin-bottom: 0.5rem;
}

#root :is(.ml-4) {
  margin-left: 1rem;
}

#root :is(.ml-6) {
  margin-left: 1.5rem;
}

#root :is(.mr-4) {
  margin-right: 1rem;
}

#root :is(.mt-1) {
  margin-top: 0.25rem;
}

#root :is(.mt-16) {
  margin-top: 4rem;
}

#root :is(.mt-3) {
  margin-top: 0.75rem;
}

#root :is(.mt-4) {
  margin-top: 1rem;
}

#root :is(.mt-8) {
  margin-top: 2rem;
}

#root :is(.flex) {
  display: flex;
}

#root :is(.table) {
  display: table;
}

#root :is(.hidden) {
  display: none;
}

#root :is(.h-12) {
  height: 3rem;
}

#root :is(.h-16) {
  height: 4rem;
}

#root :is(.h-8) {
  height: 2rem;
}

#root :is(.h-\[100vh\]) {
  height: 100vh;
}

#root :is(.h-\[140px\]) {
  height: 140px;
}

#root :is(.h-\[14px\]) {
  height: 14px;
}

#root :is(.h-\[250px\]) {
  height: 250px;
}

#root :is(.h-\[40px\]) {
  height: 40px;
}

#root :is(.h-\[700px\]) {
  height: 700px;
}

#root :is(.h-\[70px\]) {
  height: 70px;
}

#root :is(.h-\[80\%\]) {
  height: 80%;
}

#root :is(.h-\[calc\(100vh-88px\)\]) {
  height: calc(100vh - 88px);
}

#root :is(.h-\[calc\(100vh-94tartpx\)\]) {
  height: calc(100vh - 94tartpx);
}

#root :is(.h-\[calc\(calc\(100vh-88px\)-200px\)\]) {
  height: calc(calc(100vh - 88px) - 200px);
}

#root :is(.h-fit) {
  height: -moz-fit-content;
  height: fit-content;
}

#root :is(.h-full) {
  height: 100%;
}

#root :is(.h-\[calc\(100vh-94px\)\]) {
  height: calc(100vh - 94px);
}

#root :is(.max-h-\[300px\]) {
  max-height: 300px;
}

#root :is(.max-h-\[50px\]) {
  max-height: 50px;
}

#root :is(.min-h-\[100vh\]) {
  min-height: 100vh;
}

#root :is(.min-h-\[140px\]) {
  min-height: 140px;
}

#root :is(.w-16) {
  width: 4rem;
}

#root :is(.w-8) {
  width: 2rem;
}

#root :is(.w-\[100vw\]) {
  width: 100vw;
}

#root :is(.w-\[140px\]) {
  width: 140px;
}

#root :is(.w-\[14px\]) {
  width: 14px;
}

#root :is(.w-\[156px\]) {
  width: 156px;
}

#root :is(.w-\[200px\]) {
  width: 200px;
}

#root :is(.w-\[250px\]) {
  width: 250px;
}

#root :is(.w-\[350px\]) {
  width: 350px;
}

#root :is(.w-\[400px\]) {
  width: 400px;
}

#root :is(.w-\[45\%\]) {
  width: 45%;
}

#root :is(.w-\[50\%\]) {
  width: 50%;
}

#root :is(.w-\[50px\]) {
  width: 50px;
}

#root :is(.w-\[60\%\]) {
  width: 60%;
}

#root :is(.w-\[80px\]) {
  width: 80px;
}

#root :is(.w-fit) {
  width: -moz-fit-content;
  width: fit-content;
}

#root :is(.w-full) {
  width: 100%;
}

#root :is(.min-w-52) {
  min-width: 13rem;
}

#root :is(.min-w-\[100vw\]) {
  min-width: 100vw;
}

#root :is(.max-w-lg) {
  max-width: 32rem;
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8,0,1,1);
  }

  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}

#root :is(.animate-bounce) {
  animation: bounce 1s infinite;
}

#root :is(.cursor-default) {
  cursor: default;
}

#root :is(.cursor-pointer) {
  cursor: pointer;
}

#root :is(.flex-col) {
  flex-direction: column;
}

#root :is(.flex-wrap) {
  flex-wrap: wrap;
}

#root :is(.items-center) {
  align-items: center;
}

#root :is(.justify-end) {
  justify-content: flex-end;
}

#root :is(.justify-center) {
  justify-content: center;
}

#root :is(.justify-between) {
  justify-content: space-between;
}

#root :is(.justify-evenly) {
  justify-content: space-evenly;
}

#root :is(.space-x-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-x-4 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-x-8 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2rem * var(--tw-space-x-reverse));
  margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-y-12 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(3rem * var(--tw-space-y-reverse));
}

#root :is(.space-y-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

#root :is(.space-y-4 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

#root :is(.space-y-8 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

#root :is(.overflow-auto) {
  overflow: auto;
}

#root :is(.rounded) {
  border-radius: 0.25rem;
}

#root :is(.rounded-2xl) {
  border-radius: 1rem;
}

#root :is(.rounded-3xl) {
  border-radius: 1.5rem;
}

#root :is(.rounded-full) {
  border-radius: 9999px;
}

#root :is(.rounded-lg) {
  border-radius: 0.5rem;
}

#root :is(.rounded-md) {
  border-radius: 0.375rem;
}

#root :is(.rounded-sm) {
  border-radius: 0.125rem;
}

#root :is(.rounded-xl) {
  border-radius: 0.75rem;
}

#root :is(.border) {
  border-width: 1px;
}

#root :is(.border-\[1px\]) {
  border-width: 1px;
}

#root :is(.border-blue-500) {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246 / var(--tw-border-opacity));
}

#root :is(.border-green-500) {
  --tw-border-opacity: 1;
  border-color: rgb(34 197 94 / var(--tw-border-opacity));
}

#root :is(.bg-black) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

#root :is(.bg-green-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity));
}

#root :is(.bg-opacity-90) {
  --tw-bg-opacity: 0.9;
}

#root :is(.p-10) {
  padding: 2.5rem;
}

#root :is(.p-2) {
  padding: 0.5rem;
}

#root :is(.p-4) {
  padding: 1rem;
}

#root :is(.p-8) {
  padding: 2rem;
}

#root :is(.p-\[2px\]) {
  padding: 2px;
}

#root :is(.px-2) {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

#root :is(.px-3) {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

#root :is(.px-4) {
  padding-left: 1rem;
  padding-right: 1rem;
}

#root :is(.py-1) {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

#root :is(.py-2) {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

#root :is(.py-4) {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

#root :is(.py-8) {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

#root :is(.align-middle) {
  vertical-align: middle;
}

#root :is(.text-lg) {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

#root :is(.text-sm) {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

#root :is(.text-xl) {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

#root :is(.text-xs) {
  font-size: 0.75rem;
  line-height: 1rem;
}

#root :is(.font-bold) {
  font-weight: 700;
}

#root :is(.text-\[rgb\(175\2c 106\2c 255\)\]) {
  --tw-text-opacity: 1;
  color: rgb(175 106 255 / var(--tw-text-opacity));
}

#root :is(.text-blue-500) {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

#root :is(.text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

#root :is(.text-green-500) {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity));
}

#root :is(.text-red-500) {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

#root :is(.text-slate-700) {
  --tw-text-opacity: 1;
  color: rgb(51 65 85 / var(--tw-text-opacity));
}

#root :is(.no-underline) {
  text-decoration-line: none;
}

#root :is(.transition-all) {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#root :is(.transition-colors) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#root :is(.transition-transform) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#root :is(.duration-1000) {
  transition-duration: 1000ms;
}

#root :is(.duration-300) {
  transition-duration: 300ms;
}

#root :is(.duration-500) {
  transition-duration: 500ms;
}

#root :is(.hover\:scale-110:hover) {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#root :is(.hover\:scale-\[1\.01\]:hover) {
  --tw-scale-x: 1.01;
  --tw-scale-y: 1.01;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#root :is(.hover\:scale-\[1\.02\]:hover) {
  --tw-scale-x: 1.02;
  --tw-scale-y: 1.02;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#root :is(.hover\:bg-slate-400:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(148 163 184 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-opacity-20:hover) {
  --tw-bg-opacity: 0.2;
}

@media (min-width: 640px) {
  #root :is(.sm\:flex) {
    display: flex;
  }

  #root :is(.sm\:w-\[400px\]) {
    width: 400px;
  }

  #root :is(.sm\:w-\[450px\]) {
    width: 450px;
  }

  #root :is(.sm\:w-\[500px\]) {
    width: 500px;
  }
}

@media (min-width: 768px) {
  #root :is(.md\:flex) {
    display: flex;
  }

  #root :is(.md\:h-\[320px\]) {
    height: 320px;
  }

  #root :is(.md\:w-\[320px\]) {
    width: 320px;
  }

  #root :is(.md\:w-\[500px\]) {
    width: 500px;
  }

  #root :is(.md\:space-x-12 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-x-reverse: 0;
    margin-right: calc(3rem * var(--tw-space-x-reverse));
    margin-left: calc(3rem * calc(1 - var(--tw-space-x-reverse)));
  }

  #root :is(.md\:p-20) {
    padding: 5rem;
  }

  #root :is(.md\:text-lg) {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  #root :is(.md\:text-sm) {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
}

@media (min-width: 1024px) {
  #root :is(.lg\:space-x-16 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-x-reverse: 0;
    margin-right: calc(4rem * var(--tw-space-x-reverse));
    margin-left: calc(4rem * calc(1 - var(--tw-space-x-reverse)));
  }

  #root :is(.lg\:space-x-8 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
  }
}

@media (min-width: 1280px) {
  #root :is(.xl\:space-x-20 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-x-reverse: 0;
    margin-right: calc(5rem * var(--tw-space-x-reverse));
    margin-left: calc(5rem * calc(1 - var(--tw-space-x-reverse)));
  }
}
